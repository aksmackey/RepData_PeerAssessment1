library(datasets)
data(iris)
s<-split(iris, iris$Species)
class(s)
s<-split(iris, iris$Species, simplify2array)
s<-split(iris, iris$Species, simplify2array=TRUE)
s<-split(iris, iris$Species, simiplify = TRUE)
s<-data.frame(split(iris, iris$Species))
class(s)
lapply(s, function(x) colMeans(x[,c("virginica")]))
lapply(s, function(x) colMeans(x[,"virginica"]))
colnames(s)
lapply(s, function(x) colMeans(x[,c("virginica", "setosa", "versicolor")]
))
s
s<- data.frame(split(iris, iris$Species))
s
iris
s<-split(iris, iris$Species)
s
lapply(s, function(x) colMeans(x[,"Sepal.Length"]))
class(s)
s
s <- data.frame(split(iris, iris$Species))
colnames(s0)
colnames(s)
lapply(s, funciton(x) colMeans(x[,"virginica.Sepal.Length"]))
lapply(s, function(x) colMeans(x[,c("virginica.Sepal.Length")]))
dataset(airquality)
data(airquality)
s<-split(airquality, airquality$Month)
f<-function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")])
lapply(s, f)
s<-split(iris, iris$Species)
?iris
f<-function(x) colMeans(x[,"Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")])
f<-function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")])
lapply(s,f)
colMeans(iris)
apply(iris, 1, mean)
apply(iris[,1:4], 2, mean)
data(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
git
git init
?git
git init
?solve
m<-matrix(1:6, nrow=2 ncol=3)
m<-matrix(1:6, nrow=2, ncol=3)
g<-solve(m)
m<-matrix(1:9, nrow=3, ncol=3)
m
g<-solve(m)
g
m<-matrix(10:19, nrow=3, ncol=3)
m
m<-matrix(11:19, nrow=3, ncol=3)
m
det(m)
?det
solve(m)
q<-(3,5,6)
q<-3,5,6
q<-vector(3,5,6)
q<-c(2,5,6)
w<-c(3,1,6)
x<-c(5,2,4)
e<-cbind(q,w)
e
e<-cbind(e,x)
e
det(e)
solve(e)
f<-matrix(c(1,2,3,4), nrow=2, ncol=2)
f
solve(f)
source('~/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
cacheSolve((amatrix))
amatrix = makeCacheMatrix(matrix(c(0,5,99,66), nrow=2, ncol=2))
cacheSolve((amatrix))
amatrix$getinverse()
source('~/cachematrix.R')
library(XML)
install.packages(GET)
install.packages("GET")
install.packages("jsonlite")
install.packages("httpuv")
install.packages("httr")
gitapi <- oauth_app("github", key="bbeaef7b072278d160d4", secret="032b0b41632e7a6e8dc74bcdade293084ae13f9d")
library(jsonlite)
library(httr)
library(httpuv)
gitapi <- oauth_app("github", key="bbeaef7b072278d160d4", secret="032b0b41632e7a6e8dc74bcdade293084ae13f9d")
github_token <- oauth2.0_token(oauth_endpoints("github"), gitapi, cache = FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
page <- GET("https://api.github.com/users/jtleek/repos", gtoken)
head(page)
names(page)
head(page[7])
pagecont <- content(page, as="text")
parCont <- htmlParse(pagecont, asText=TRUE)
xpathSApply(parCont, "//date", xmlValue)
head(parCont)
names(parCont)
parCont
rootnode <- xmlRoot(parCont)
xpathSApply(rootnode, "//name", xmlValue)
rootnames <- xpathSApply(rootnode, "//name", xmlValue)
rootnames
head(rootnode)
hubnames <- xpathSApply(parCont, "//class=name", xmlValue)
hubnames
xpathSApply(parCont, "//id")
xpathSApply(parCont, "//[@name='datasharing']", xmlValue)
?xpathSApply
xpathSApply(parCont, "//@name='datasharing'", xmlValue)
xpathSApply(parCont, "/[@name='datasharing']", xmlValue)
xpathSApply(parCont, "/@name='datasharing'", xmlValue)
head(parCont)
parCont
url <- GET("https://api.github.com/users/jtleek/repos", gtoken)
html <- htmlTreeParse(url, useInternalNodes = T)
xpathSApply(html, "//name", xmlValue)
content3 <- content(url, as = "text")
parsedHtml <- htmlTreeParse(content3, asText=TRUE)
xpathSApply(parsedHtml, "//name", xmlValue)
parsedHtml <- htmlParse(content3, asText=TRUE)
xpathSApply(parsedHtml, "//name", xmlValue)
cheese <- xpathSApply(parsedHtml, "//name", xmlValue)
cheese
parsedHtml
xpathSApply(parsedHtml, "//created_at", xmlValue)
getdirect <- GET("https://api.github.com/users/jtleek/repos", gtoken)
json1 <- content(getdirect)
json2 <- jsonlite::fromJSON(toJSON(json1))
print json2['name' == 'datasharing']
print(json2('name' == 'datasharing'))
library(data.table)
DF <- data.table(json1)
head(DF)
head(json1)
head(DF)
DF
names(parsedHtml)
closeAllConnections()
oauth_endpoints("github")
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
getwd()
setwd("/Users/landonmackey2/Documents/Coursera/datasciencecoursera/reproresch/RepData_PeerAssessment1")
activ = read.csv("activity.csv", na.strings = "NA")
count(active[,steps=="NA"])
grp2 = group_by(activ, interval)
library(ggplot2)
library(dplyr)
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
head(inttot)
unique(inttot$interval)
for i in inttot$interval:
for i in inttot[,1]:
intervals <- inttot[,1]
for i in intervals:
for (i in intervals):
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
head(activ2)
activ2["892"]
activ2[,235]
activ2[243,]
inttot[,avgstep][interval==0]
inttot[,inttot$avgstep][interval==0]
inttot[,inttot$avgstep][inttot$interval==0]
inttot[,inttot$avgstep][,inttot$interval==0]
nrows(activ)
nrow(activ)
for (i in nrow(activ))
{}
?impute
test <- subset(activ[60,])
str(test)
test <- subset(activ[789:1008,])
str(test)
}
if (test[i, test$steps] == 'NA') {
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in nrow(test)) {
if (test[i, test$steps] == 'NA') {
test = test[i, test$steps] <- test[i, test$avgsteps]
}
}
head(activ2)
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in nrow(test)) {
if (test[i, test$steps] == 'NA') {
test = test[i, test$steps] <- test[i, test$avgstep]
}
}
i = 4
test[i,]
test[i,test$steps]
test[i,steps]
test[i,2]
test
sum(is.na(test$steps))
print(sum(is.na(test$steps)))
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in nrow(test)) {
if (test[i, 2] == 'NA') {
print (i)
test = test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
test[2,]
test[3,]
test[5]
test[6,]
len(test)
nrow(test)
test
test[1005]
test[1005,]
nrow(test)
test[216,]
test[217,]
test[217,2]
test[217,4]
test[217,2] <- test[217,4]
test[217,2]
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in nrow(test)) {
if (test[i, 2] == 'NA') {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
test[214,2] == "NA"
is.na(test[214,2])
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in nrow(test)) {
if is.na(test[i, 2]) == TRUE {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in nrow(test)) {
if (is.na(test[i, 2])) == TRUE {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in nrow(test)) {
if (is.na(test[i, 2]) == TRUE) {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in nrow(test)) {
print (i)
print test[i,]
if (is.na(test[i, 2]) == TRUE) {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in 0,nrow(test)) {
print (i)
print test[i,]
if (is.na(test[i, 2]) == TRUE) {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in range(0,nrow(test))) {
print (i)
print test[i,]
if (is.na(test[i, 2]) == TRUE) {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in range(0,nrow(test))) {
print (i)
print (test[i,])
if (is.na(test[i, 2]) == TRUE) {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
for (i in range(1,nrow(test))) {
print (i)
print (test[i,])
if (is.na(test[i, 2]) == TRUE) {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
top <- nrow(test)
for (i in range(1,top)) {
print (i)
print (test[i,])
if (is.na(test[i, 2]) == TRUE) {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
?range
range(0,10)
range(0, 10, 1)
seq_along(0:10)
activ = read.csv("activity.csv", na.strings = "NA")
grp2 = group_by(activ, interval)
inttot <- summarize(grp2, avgstep=mean(steps, na.rm=TRUE))
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
test <- subset(activ2[789:1008,])
top <- nrow(test)
for (i in seq_along(1:top)) {
if (is.na(test[i, 2]) == TRUE) {
print (i)
test[i, 2] <- test[i, 4]
}
}
print(sum(is.na(test$steps)))
?weekdays
day <- 20121011
weedays(day)
weekdays(day)
str(activ2)
activ2$Ddate <- as.Date(activ2$date, format = '%Y-%m-%d')
str(activ2)
activ2$date
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
activ2$wDay <- factor((weekdays(df1$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
)
activ2$wDay <- factor((weekdays(activ2$Ddate) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
str(activ2)
par = (mfrow = c('1,2'))
library(lattice)
?group_by
grp4 <- group_by(activ2, date, wDay)
str(grp4)
inttot2 <- summarize(grp4, avgstep=mean(steps))
str(inttot2)
str(inttot)
head(inttot2)
grp4 <- group_by(activ2, interval, wDay)
inttot2 <- summarize(grp4, avgstep=mean(steps))
str(inttot2)
xyplot(active2$avgstep ~ activ2$interval | activ2$wDay)
xyplot(activ2$avgstep ~ activ2$interval | activ2$wDay)
densityplot(activ2$avgstep ~ activ2$interval | activ2$wDay)
yplot(activ2$avgstep ~ activ2$interval | activ2$wDay)
xyplot(activ2$avgstep ~ activ2$interval | activ2$wDay)
xyplot(activ2$avgstep ~ activ2$interval | activ2$wDay, panel=panel.smoother)
xyplot(activ2$avgstep ~ activ2$interval | activ2$wDay, panel=panel.loess(x, y)
)
panel.smoother <- function(x, y) {
panel.loess(x, y)  # show smoothed line
}
xyplot(activ2$avgstep ~ activ2$interval | activ2$wDay, panel=panel.smoother)
xyplot(activ2$avgstep ~ activ2$interval | activ2$wDay, add.line)
xyplot(activ2$avgstep ~ activ2$interval | activ2$wDay, type ="l")
colnames(activ2)
inttot2
inttot
is.na(activ2$steps)
head(activ2)
activ2 <- merge(activ, inttot, by.x = "interval", by.y ="interval")
top <- nrow(activ2)
for (i in seq_along(1:top)) {
if (is.na(activ2[i, 2]) == TRUE) {
activ2[i, 2] <- activ2[i, 4]
}
}
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
activ2$Ddate <- as.Date(activ2$date, format = '%Y-%m-%d')
activ2$wDay <- factor((weekdays(activ2$Ddate) %in% weekdays1),
levels=c(FALSE, TRUE),
labels=c('weekend', 'weekday'))
grp4 <- group_by(activ2, interval, wDay)
inttot2 <- summarize(grp4, avgstep=mean(steps))
xyplot(activ2$avgstep ~ activ2$interval | activ2$wDay, type ="l",
main = "Weekday and Weekend Activity Patterns",
xlab = "Interval",
ylab = "Average Steps",
layout = c(1,2))
inttot2
xyplot(inttot2$avgstep ~ inttot2$interval | inttot2$wDay, type ="l",
main = "Weekday and Weekend Activity Patterns",
xlab = "Interval",
ylab = "Average Steps",
layout = c(1,2))
